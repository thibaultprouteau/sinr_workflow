name: Deploy to PyPI

on:
  release:
    types: [created]

jobs:
  deploy:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: "false"
    steps:
      - uses: actions/checkout@v3
      
      - name: Install poetry
        run: |
         pipx install poetry
         pipx inject poetry poetry-bumpversion

      - name: Build
        run: |
          poetry version ${{ github.ref_name }}
          poetry build

      - name: Publish
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          # poetry config pypi-token.pypi ${{ secrets.TEST_PYPI_API_TOKEN }}
          poetry publish -r test-pypi -u ${{ secrets.TEST_PYPI_UNAME }} -p ${{ secrets.TEST_PYPI_PWD }}
          
      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        if: ${{startsWith(github.ref, 'refs/tags/') }}
        with:
          files: dist/*
      
      - name: Commit and push changes
        uses: devops-infra/action-commit-push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          commit_prefix: "[AUTO-COMMIT] update release version"
      - name: Create pull request
        uses: devops-infra/action-pull-request@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          body: "**Automated pull request**<br><br>Updated release version"
          title: ${{ github.event.commits[0].message }}
